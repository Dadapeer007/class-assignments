4. What is OOPS object oriented programming?

Object-Oriented Programming (OOP) is a programming paradigm or methodology that uses objects as the fundamental building blocks for designing and organizing code. In OOP, everything is treated as an object, which is an instance of a class.

Classes and Objects:

A class is a blueprint or template for creating objects. It defines the structure and behavior that the objects created from the class will have.
An object is an instance of a class. It represents a real-world entity or concept and encapsulates its state (attributes or properties) and behavior (methods).

Encapsulation:

Encapsulation is the practice of bundling an object's state (data) and behavior (methods) into a single unit called an object. This unit is responsible for managing its internal state, and external code interacts with it through defined interfaces (methods).

Abstraction:

Abstraction is the process of simplifying complex reality by modeling classes based on the essential properties and behaviors of real-world entities. It hides the complex implementation details and exposes only what's necessary.

Inheritance:

Inheritance is a mechanism that allows a class (called a subclass or derived class) to inherit properties and behaviors from another class (called a superclass or base class). It promotes code reuse and the creation of hierarchical relationships between classes.
